# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.3'
        check-latest: true
        
    - name: Build for Debian
      working-directory: server
      run: GOOS=linux GOARCH=amd64 go build -o yt-info-to-obs

    - name: Build for Windows
      working-directory: server
      run: GOOS=windows GOARCH=amd64 go build -o yt-info-to-obs.exe
          
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: example env file
      run: touch server/.env && echo "API_KEY=<your api key here>" > server/.env

    - name: compress
      run: | 
        mkdir linux  
        mkidr windows 
        cp server/yt-info-to-obs linux  
        cp server/.env linux 
        cp server/yt-info-to-obs.exe windows 
        cp server/.env windows
        tar -czf yt-info-OBS-linux.tar.gz linux
        zip -r yt-info-OBS-windows.zip windows
        
    - name: Install GitHub Release Action
      uses: softprops/action-gh-release@v1
      with:
        files: |
          yt-info-OBS-linux.tar.gz
          yt-info-OBS-windows.zip
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}

    - name: Publish Release
      run: echo "Release published"
